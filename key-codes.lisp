(in-package #:clsxwm)

;(defvar codes-to-keys (make-hash-table))
;(defvar keys-to-codes (make-hash-table :test #'equal))

(eval-when (:compile-toplevel :load-toplevel :execute)
  (let ((codes-to-keys (make-hash-table))
        (keys-to-codes (make-hash-table :test #'equal)))
    (defun define-code (code key)
      (check-type code number)
      (check-type key string)
      (setf (gethash code codes-to-keys) key
            (gethash key keys-to-codes) code))
  
    (defun key-to-code (key)
      (gethash key keys-to-codes))
  
    (defun code-to-key (code)
      (gethash code codes-to-keys))))

(defmacro define-code-mappings (&body body)
  (loop :for x :in body
        :do (define-code (car x) (cadr x))))

(define-code-mappings
  (#x1008FF12 "XF86AudioMute")
  (#x1008FF14 "XF86AudioPlay")
  (#x1008FF15 "XF86AudioStop")
  (#x1008FF16 "XF86AudioPrev")
  (#x1008FF17 "XF86AudioNext")
  (#x1008FF31 "XF86AudioPause")
  (#x1008FF32 "XF86AudioMedia")
  (#xffffff "VoidSymbol")   ;Void symbol
  (#xff08 "BackSpace")
  (#xff09 "Tab")
  (#xff0a "Linefeed")
  (#xff0b "Clear")
  (#xff0d "Return")
  (#xff13 "Pause")
  (#xff14 "Scroll_Lock")
  (#xff15 "Sys_Req")
  (#xff1b "Escape")
  (#xffff "Delete")
  (#xff20 "Multi_key")      ;Multi-key character compose
  (#xff37 "Codeinput")
  (#xff3c "SingleCandidate")
  (#xff3d "MultipleCandidate")
  (#xff3e "PreviousCandidate")
  (#xff50 "Home")
  (#xff51 "Left")           ;Move left, left arrow
  (#xff52 "Up")             ;Move up, up arrow
  (#xff53 "Right")          ;Move right, right arrow
  (#xff54 "Down")           ;Move down, down arrow
  (#xff55 "Prior")          ;Prior, previous
  (#xff55 "Page_Up")
  (#xff56 "Next")
  (#xff56 "Page_Down")
  (#xff57 "End")            ;EOL
  (#xff58 "Begin")          ;BOL
  (#xff60 "Select")
  (#xff61 "Print")
  (#xff62 "Execute")
  (#xff63 "Insert")
  (#xff7f "Num_Lock")
  (#xff80 "KP_Space")
  (#xff89 "KP_Tab")
  (#xff8d "KP_Enter")
  (#xff91 "KP_F1")
  (#xff92 "KP_F2")
  (#xff93 "KP_F3")
  (#xff94 "KP_F4")
  (#xff95 "KP_Home")
  (#xff96 "KP_Left")
  (#xff97 "KP_Up")
  (#xff98 "KP_Right")
  (#xff99 "KP_Down")
  (#xff9a "KP_Prior")
  (#xff9a "KP_Page_Up")
  (#xff9b "KP_Next")
  (#xff9b "KP_Page_Down")
  (#xff9c "KP_End")
  (#xff9d "KP_Begin")
  (#xff9e "KP_Insert")
  (#xff9f "KP_Delete")
  (#xffbd "KP_Equal")
  (#xffaa "KP_Multiply")
  (#xffab "KP_Add")
  (#xffac "KP_Separator")   ;Separator, often comma
  (#xffad "KP_Subtract")
  (#xffae "KP_Decimal")
  (#xffaf "KP_Divide")
  (#xffb0 "KP_0")
  (#xffb1 "KP_1")
  (#xffb2 "KP_2")
  (#xffb3 "KP_3")
  (#xffb4 "KP_4")
  (#xffb5 "KP_5")
  (#xffb6 "KP_6")
  (#xffb7 "KP_7")
  (#xffb8 "KP_8")
  (#xffb9 "KP_9")
  (#xffbe "F1")
  (#xffbf "F2")
  (#xffc0 "F3")
  (#xffc1 "F4")
  (#xffc2 "F5")
  (#xffc3 "F6")
  (#xffc4 "F7")
  (#xffc5 "F8")
  (#xffc6 "F9")
  (#xffc7 "F10")
  (#xffc8 "F11")
  (#xffc9 "F12")
  (#xffe1 "Shift_L")
  (#xffe2 "Shift_R")
  (#xffe3 "Control_L")
  (#xffe4 "Control_R")
  (#xffe5 "Caps_Lock")
  (#xffe6 "Shift_Lock")
  (#xffe7 "Meta_L")
  (#xffe8 "Meta_R")
  (#xffe9 "Alt_L")
  (#xffea "Alt_R")
  (#xffeb "Super_L")
  (#xffec "Super_R")
  (#xffed "Hyper_L")
  (#xffee "Hyper_R")
  (#x0020 "space")
  (#x0021 "exclam")
  (#x0022 "quotedbl")
  (#x0023 "numbersign")
  (#x0024 "dollar")
  (#x0025 "percent")
  (#x0026 "ampersand")
  (#x0027 "apostrophe")
  (#x0028 "parenleft")
  (#x0029 "parenright")
  (#x002a "asterisk")
  (#x002b "plus")
  (#x002c "comma")
  (#x002d "minus")
  (#x002e "period")
  (#x002f "slash")
  (#x0030 "0")
  (#x0031 "1")
  (#x0032 "2")
  (#x0033 "3")
  (#x0034 "4")
  (#x0035 "5")
  (#x0036 "6")
  (#x0037 "7")
  (#x0038 "8")
  (#x0039 "9")
  (#x003a "colon")
  (#x003b "semicolon")
  (#x003c "less")
  (#x003d "equal")
  (#x003e "greater")
  (#x003f "question")
  (#x0040 "at")
  (#x0041 "A")
  (#x0042 "B")
  (#x0043 "C")
  (#x0044 "D")
  (#x0045 "E")
  (#x0046 "F")
  (#x0047 "G")
  (#x0048 "H")
  (#x0049 "I")
  (#x004a "J")
  (#x004b "K")
  (#x004c "L")
  (#x004d "M")
  (#x004e "N")
  (#x004f "O")
  (#x0050 "P")
  (#x0051 "Q")
  (#x0052 "R")
  (#x0053 "S")
  (#x0054 "T")
  (#x0055 "U")
  (#x0056 "V")
  (#x0057 "W")
  (#x0058 "X")
  (#x0059 "Y")
  (#x005a "Z")
  (#x005b "bracketleft")
  (#x005c "backslash")
  (#x005d "bracketright")
  (#x005e "asciicircum")
  (#x005f "underscore")
  (#x0060 "grave")
  (#x0061 "a")
  (#x0062 "b")
  (#x0063 "c")
  (#x0064 "d")
  (#x0065 "e")
  (#x0066 "f")
  (#x0067 "g")
  (#x0068 "h")
  (#x0069 "i")
  (#x006a "j")
  (#x006b "k")
  (#x006c "l")
  (#x006d "m")
  (#x006e "n")
  (#x006f "o")
  (#x0070 "p")
  (#x0071 "q")
  (#x0072 "r")
  (#x0073 "s")
  (#x0074 "t")
  (#x0075 "u")
  (#x0076 "v")
  (#x0077 "w")
  (#x0078 "x")
  (#x0079 "y")
  (#x007a "z")
  (#x007b "braceleft")      ;left curly bracket
  (#x007c "bar")            ;vertical line
  (#x007d "braceright")     ;right curly bracket
  (#x007e "asciitilde"))
